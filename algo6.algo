PROCEDURE dot-product(v1,v2: ARRAY_OF float,var ps:float)

VAR
    i : INTEGER
BEGIN
ps:=0
    FOR i FROM 0 TO v1.length-1 DO
        ps := ps+(v1[i]*v2[i]);
    END_FOR
    return ps;
END
//ALGO
ALGORITHM orthgonal
VAR
    l1,l2: ARRAY_OF arrays;
    ps:=foat;
    i,n : INTEGER
BEGIN
    FOR i FROM 0 TO n-1  DO
        IF l1[i].length=l2[i].length THEN
        //dot_product(l1[i],l2[i],ps);
        IF (ps=0) THEN
            write('orthgonal vectors')
        ELSE
            write('non orthgonal vectors')
        END_IF
        END_IF
        ELSE write('ERROR')
    END_FOR
END
//FUNCTION
FUNCTION dot-product(v1,v2:array of float) : float
VAR
    i : INTEGER
    ps: float :=0;
BEGIN
     FOR i FROM 0 TO v1.length-1 DO
        ps := ps+(v1[i]*v2[i]);
    END_FOR
    return ps ;
    
END